export default function ResultCard({ result, scores, archetypeInfo }) {
  const handleDownload = () => {
    const content = `FounderDNA Results
==================

Your Archetype: ${archetypeInfo.title}
Type: ${archetypeInfo.subtitle}

Description:
${archetypeInfo.description}

Your Scores:
${Object.entries(scores)
  .sort((a, b) => b[1] - a[1])
  .map(([k, v]) => `${k}: ${v}`)
  .join('\n')}

---
Generated by FounderDNA
`;

    const blob = new Blob([content], { type: "text/plain" });
    const link = document.createElement("a");
    link.href = URL.createObjectURL(blob);
    link.download = "founderdna-results.txt";
    link.click();
  };

  const sortedScores = Object.entries(scores).sort((a, b) => b[1] - a[1]);

  return (
    <div className="min-h-screen bg-black flex items-center justify-center px-4 py-12">
      <div className="max-w-3xl w-full space-y-12 animate-fade-in">
        <div className="text-center space-y-6">
          <div className="text-sm text-gray-500 font-medium tracking-wider uppercase">
            Your Result
          </div>
          <h2 className="text-6xl md:text-7xl font-bold text-white tracking-tight">
            {archetypeInfo.title}
          </h2>
          <p className="text-xl text-gray-400">
            {archetypeInfo.subtitle}
          </p>
        </div>

        <div className="bg-gray-900 rounded-2xl p-8 md:p-12 border border-gray-800">
          <p className="text-xl md:text-2xl text-gray-300 leading-relaxed">
            {archetypeInfo.description}
          </p>
        </div>

        <div className="bg-gray-900 rounded-2xl p-8 border border-gray-800">
          <h3 className="text-2xl font-bold text-white mb-6">Your Profile</h3>
          <div className="space-y-4">
            {sortedScores.map(([trait, score]) => (
              <div key={trait} className="space-y-2">
                <div className="flex justify-between items-center">
                  <span className="text-lg text-gray-300 font-medium">{trait}</span>
                  <span className="text-lg text-gray-500">{score}</span>
                </div>
                <div className="w-full bg-gray-800 rounded-full h-2 overflow-hidden">
                  <div
                    className="bg-white h-full transition-all duration-1000 ease-out"
                    style={{ width: `${(score / 25) * 100}%` }}
                  />
                </div>
              </div>
            ))}
          </div>
        </div>

        <div className="flex justify-center">
          <button
            onClick={handleDownload}
            className="px-8 py-4 bg-white text-black text-lg font-semibold rounded-lg hover:bg-gray-100 transition-all duration-200 hover:scale-105"
          >
            Download Results
          </button>
        </div>
      </div>
    </div>
  );
}
